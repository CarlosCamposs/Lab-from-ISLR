tinytex::install_tinytex()
7.66*400000
update.packages(ask = FALSE)
updateR()
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
updateR()
updateR()
updateR()
updateR()
install.packages("installr") # install installr
updateR()
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
install.packages("TTR")
install.packages("TTR")
install.packages("TTR")
install.packages("tidyquant")
library(quantmod)
library(TTR)
library(tidyquant)
getSymbols("WALMEX.MX",src = "yahoo",from="2019-01-01",to="2023-04-30")
View(WALMEX.MX)
precios<-WALMEX.MX$WALMEX.MX.Close
View(precios)
class(precios)
precios<-as.data.frame(precios)
class(precios)
View(precios)
colnames(precios)<-"WALMEX"
precios
view(precios)
View(precios)
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
mydata <- write.xlsx(precios,".xlsx")
saveWorkbook(mydata, file = "C:\Users\Carlos Daniel\Desktop\Finanzas corporativas\Acciones\Precios.xlsx", overwrite = TRUE)
saveWorkbook(mydata, file = "C:/Users/Carlos Daniel/Desktop/Finanzas corporativas/Acciones/Precios.xlsx", overwrite = TRUE)
View(WALMEX.MX)
getSymbols("WALMEX.MX",src = "yahoo",from="2019-01-01",to="2022-12-31")
precios<-WALMEX.MX$WALMEX.MX.Close
precios<-as.data.frame(precios)
colnames(precios)<-"WALMEX"
View(precios)
# Cargamos la biblioteca
library(quantmod)
library(TTR)
library(tidyquant)
portafolio=c("WALMEX.MX","GFNORTEO.MX",
"GMEXICOB.MX", "ELEKTRA.MX","BIMBOA.MX")
getSymbols(portafolio,src = "yahoo",from="2019-01-01",to="2022-12-31")
P_accion1<-WALMEX.MX$WALMEX.MX.Close
P_accion2<-GFNORTEO.MX$GFNORTEO.MX.Close
P_accion3<-GMEXICOB.MX$GMEXICOB.MX.Close
P_accion4<-ELEKTRA.MX$ELEKTRA.MX.Close
P_accion5<-BIMBOA.MX$BIMBOA.MX.Close
tabla_precios<-cbind(P_accion1,P_accion2,P_accion3,P_accion4,P_accion5)
class(tabla_precios)
# ------------------------------------------------------------------------------
# Convertimos la tabla anterior en un dataframe
tabla_precios<-as.data.frame(tabla_precios)
# Damos nombre a las columnas
colnames(tabla_precios)<-portafolio
View(tabla_precios)
View(tabla_precios)
fecha<-index(WALMEX.MX)
tabla_precios[,6]<-fecha
View(tabla_precios)
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
library(MASS)
library(ISLR2)
setwd("C:/Users/Carlos Daniel/Desktop/Lab from ISLR/data")
setwd("C:/Users/Carlos Daniel/Desktop/GitHub/Lab-from-ISLR/data")
Boston
head(Boston)
lm.fit <- lm(medv~lstat, data=Boston)
setwd("C:/Users/Carlos Daniel/Desktop/GitHub/Lab-from-ISLR/data")
lm.fit
summary(lm.fit)
names(lm.fit)
coef(lm.fit)
coef(lm.fit)
lm.fit$coefficients
confint(lm.fit)
predict(lm.fit, data.frame(lstat=(c(5,10,15))),
interval="confidence")
predict(lm.fit,data.frame(lstat=(c(5,10,15))),
interval="prediction")
plot(lstat,medv)
attach(Boston)
plot(lstat,medv)
abline(lm.fit)
abline(lm.fit,lw=3)
plot(lstat,medv)
abline(lm.fit,lw=3)
abline(lm.fit,lw=3,col="red")
plot(lstat,medv,col="red")
plot(lstat,medv,pch=20)
plot(lstat,medv,pch="+")
plot(1:20,1:20,pch=1:20)
plot(lm.fit)
plot(lm.fit)
par(mfrow=c(2,2))
plot(lm.fit)
# Podriamos hacer cada una de las graficas que se muestran en el anterior plot de la siguiente manera:
plot(predict(lm.fit),residuals(lm.fit))
plot(predict(lm.fit),residuals(lm.fit))
plot(lm.fit$fitted.values,lm.fit$residuals)
plot(predict(lm.fit),rstudent(lm.fit))
names(lm.fit)
lm.fit$df.residual
rstudent(lm.fit)
#####
# El leverage se puede calcular para cualquier numero de predictores con la funcion "hatvalues"
plot(hatvalues(lm.fit))
which.max(hatvalues(lm.fit))
hatvalues(lm.fit)[375]
